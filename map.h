#include<stdio.h>
#include<stdlib.h>

int char_table[27][29]= {
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};

int phoneme_table[53][21]= {
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};		

int stress_table[5][5] = {
		{0,0,0,0,1},
		{0,0,0,1,0},	
		{0,0,1,0,0},
		{0,1,0,0,0},	
		{1,0,0,0,0}};
		

int* map_char(char c){
	//	printf("\"%c\"\n", c);
	if(c == 'a')
		return char_table[0];	
	else if(c == 'b')
		return char_table[1];	
	else if(c == 'c')
		return char_table[2];	
	else if(c == 'd')
		return char_table[3];	
	else if(c == 'e')
		return char_table[4];	
	else if(c == 'f')
		return char_table[5];	
	else if(c == 'g')
		return char_table[6];	
	else if(c == 'h')
		return char_table[7];	
	else if(c == 'i')
		return char_table[8];	
	else if(c == 'j')
		return char_table[9];	
	else if(c == 'k')
		return char_table[10];	
	else if(c == 'l')
		return char_table[11];	
	else if(c == 'm')
		return char_table[12];	
	else if(c == 'n')
		return char_table[13];	
	else if(c == 'o')
		return char_table[14];	
	else if(c == 'p')
		return char_table[15];	
	else if(c == 'q')
		return char_table[16];	
	else if(c == 'r')
		return char_table[17];	
	else if(c == 's')
		return char_table[18];	
	else if(c == 't')
		return char_table[19];	
	else if(c == 'u')
		return char_table[20];	
	else if(c == 'v')
		return char_table[21];	
	else if(c == 'w')
		return char_table[22];	
	else if(c == 'x')
		return char_table[23];	
	else if(c == 'y')
		return char_table[24];	
	else if(c == 'z')
		return char_table[25];	
	else
		return char_table[26];	
	return NULL;
}

int* map_phoneme(char c){
	//printf("\"%c\"\n", c);
	if(c == 'a')
		return phoneme_table[0];
	else if(c == 'b')
		return phoneme_table[1];
	else if(c == 'c')
		return phoneme_table[2];
	else if(c == 'd')
		return phoneme_table[3];
	else if(c == 'e')
		return phoneme_table[4];
	else if(c == 'f')
		return phoneme_table[5];
	else if(c == 'g')
		return phoneme_table[6];
	else if(c == 'h')
		return phoneme_table[7];
	else if(c == 'i')
		return phoneme_table[8];
	else if(c == 'j')
		return phoneme_table[9];
	else if(c == 'k')
		return phoneme_table[10];
	else if(c == 'l')
		return phoneme_table[11];
	else if(c == 'm')
		return phoneme_table[12];
	else if(c == 'n')
		return phoneme_table[13];
	else if(c == 'o')
		return phoneme_table[14];
	else if(c == 'p')
		return phoneme_table[15];
	else if(c == 'r')
		return phoneme_table[16];
	else if(c == 's')
		return phoneme_table[17];
	else if(c == 't')
		return phoneme_table[18];
	else if(c == 'u')
		return phoneme_table[19];
	else if(c == 'v')
		return phoneme_table[20];
	else if(c == 'w')
		return phoneme_table[21];
	else if(c == 'x')
		return phoneme_table[22];
	else if(c == 'y')
		return phoneme_table[23];
	else if(c == 'z')
		return phoneme_table[24];
	else if(c == 'A')
		return phoneme_table[25];
	else if(c == 'C')
		return phoneme_table[26];
	else if(c == 'D')
		return phoneme_table[27];
	else if(c == 'E')
		return phoneme_table[28];
	else if(c == 'G')
		return phoneme_table[29];
	else if(c == 'I')
		return phoneme_table[30];
	else if(c == 'J')
		return phoneme_table[31];
	else if(c == 'K')
		return phoneme_table[32];
	else if(c == 'L')
		return phoneme_table[33];
	else if(c == 'M')
		return phoneme_table[34];
	else if(c == 'N')
		return phoneme_table[35];
	else if(c == 'O')
		return phoneme_table[36];
	else if(c == 'Q')
		return phoneme_table[37];
	else if(c == 'R')
		return phoneme_table[38];
	else if(c == 'S')
		return phoneme_table[39];
	else if(c == 'T')
		return phoneme_table[40];
	else if(c == 'U')
		return phoneme_table[41];
	else if(c == 'W')
		return phoneme_table[42];
	else if(c == 'X')
		return phoneme_table[43];
	else if(c == 'Y')
		return phoneme_table[44];
	else if(c == 'Z')
		return phoneme_table[45];
	else if(c == '@')
		return phoneme_table[46];
	else if(c == '!')
		return phoneme_table[47];
	else if(c == '#')
		return phoneme_table[48];
	else if(c == '*')
		return phoneme_table[49];
	else if(c == '^')
		return phoneme_table[50];
	else if(c == '+')
		return phoneme_table[51];
	else if(c == '-')
		return phoneme_table[52];
	return NULL;
}


int* map_stress(char c){
	//printf("\"%c\"\n", c);
	if(c == '>')
		return stress_table[0];
	else if(c == '<')
		return stress_table[1];	
	else if(c == '0')
		return stress_table[2];	
	else if(c == '2')
		return stress_table[3];	
	else if(c == '1')
		return stress_table[4];	
	return NULL;
}

/*


int* map_char(char c){
	int* p =(int*)malloc(sizeof(int)*26);
	if(c == 'a')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};
	else if(c == 'b')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0};
	else if(c == 'c')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0};
	else if(c == 'd')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0};
	else if(c == 'e')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0};
	else if(c == 'f')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0};
	else if(c == 'g')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0};
	else if(c == 'h')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0};
	else if(c == 'i')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0};
	else if(c == 'j')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0};
	else if(c == 'k')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'l')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'm')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'n')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'o')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'p')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'q')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'r')
		p = {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 's')
		p = {0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 't')
		p = {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'u')
		p = {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'v')
		p = {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'w')
		p = {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'x')
		p = {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'y')
		p = {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else if(c == 'z')
		p = {0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	else:
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	return p;
}

int* map_phoneme(char c){
	int* p = (int*)malloc(sizeof(int)*21);
	if(c == 'a')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};
	else if(c == 'b')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0};
	else if(c == 'c')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1};
	else if(c == 'd')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0};
	else if(c == 'e')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1};
	else if(c == 'f')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0};
	else if(c == 'g')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1};
	else if(c == 'h')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0};
	else if(c == 'i')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1};
	else if(c == 'j')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0};
	else if(c == 'k')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1};
	else if(c == 'l')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0};
	else if(c == 'm')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1};
	else if(c == 'n')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0};
	else if(c == 'o')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1};
	else if(c == 'p')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0};
	else if(c == 'r')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1};
	else if(c == 's')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0};
	else if(c == 't')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1};
	else if(c == 'u')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0};
	else if(c == 'v')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1};
	else if(c == 'w')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0};
	else if(c == 'x')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1};
	else if(c == 'y')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0};
	else if(c == 'z')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1};
	else if(c == 'A')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0};
	else if(c == 'C')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1};
	else if(c == 'D')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0};
	else if(c == 'E')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1};
	else if(c == 'G')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0};
	else if(c == 'I')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1};
	else if(c == 'J')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0};
	else if(c == 'K')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1};
	else if(c == 'L')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0};
	else if(c == 'M')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1};
	else if(c == 'N')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0};
	else if(c == 'O')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1};
	else if(c == 'Q')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0};
	else if(c == 'R')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1};
	else if(c == 'S')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0};
	else if(c == 'T')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1};
	else if(c == 'U')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0};
	else if(c == 'W')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1};
	else if(c == 'X')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0};
	else if(c == 'Y')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1};
	else if(c == 'Z')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0};
	else if(c == '@')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1};
	else if(c == '!')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0};
	else if(c == '#')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1};
	else if(c == '*')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0};
	else if(c == '^')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1};
	else if(c == '+')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0};
	else if(c == '-')
		p = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	return p;
}


int* map_stress(char c){
	int* p = (int*)malloc(sizeof(int)*5);
	if(c == '>')
		p = {0,0,0,0,1};
	else if(c == '<')
		p = {0,0,0,1,0};	
	else if(c == '0')
		p = {0,0,1,0,0};
	else if(c == '2')
		p = {0,1,0,0,0};	
	else if(c == '1')
		p = {1,0,0,0,0};
	return p;
}
*/
